version: '3.8'

services:
  #MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - my-website-network
    volumes:
      - mongodb_data:/data/db  # Use a volume for data persistence
    ports:
      - 27017:27017 # Expose port for external access if needed (optional in Docker network)
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=qwerty
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend:
    image: ninadrathod/my-website-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    networks:
      - my-website-network
    ports:
      - 3001:3001
    volumes:
      - ./backend:/app # Mount the ./backend directory to /app (matching WORKDIR)
      - node-modules:/app/node_modules # Mount node_modules to /app/node_modules
    working_dir: /app
    depends_on:
      - mongodb
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://admin:qwerty@mongodb:27017 # Use service name as hostname
    healthcheck:
      test: wget -qO- http://localhost:3001/health | grep -q 'OK'
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
  frontend:
    image: ninadrathod/my-website-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    networks:
      - my-website-network
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    working_dir: /app
    depends_on:
      - backend
    restart: always
  
networks:
  my-website-network:
    driver: bridge

volumes:
  mongodb_data:
  node-modules:
