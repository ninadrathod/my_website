events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ADD OR MODIFY THIS LINE:
    client_max_body_size 15M; # Allows requests up to 15 megabytes

    # =======================================================
    # HTTP to HTTPS Redirect (Listens on port 80)
    # This block catches all HTTP traffic and redirects it to HTTPS.
    # =======================================================
    server {
        listen 80;
        listen [::]:80; # Listen on IPv6 as well
        server_name localhost; # Use your domain(s) and/or IP
    
        # IMPORTANT: Add this location block for Certbot's webroot challenge
        # Keep this if you plan to get certificates via HTTP only later
        location /.well-known/acme-challenge/ {
            root /var/www/certbot; # This directory will be mounted from the host
        }

        # =======================================================
        # Proxy requests for Backend APIs
        # Frontend calls: https://yourdomain.com/backend-api/...
        # Backend expects: /backend-api/...
        # Nginx just passes it through.
        # =======================================================
        location /backend-api/ {
            proxy_pass http://backend:3001; # No rewrite needed, path matches
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # =======================================================
        # Proxy requests for Upload Service APIs
        # Frontend calls: https://yourdomain.com/upload-service-api/...
        # Upload service expects: /upload-service-api/...
        # Nginx just passes it through.
        # =======================================================
        location /upload-service-api/ {
            proxy_pass http://upload-service:3002; # No rewrite needed, path matches
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # =======================================================
        # Proxy requests for static images from upload-service
        # Frontend will request https://yourdomain.com/images/...
        # Nginx will proxy this to http://upload-service:3002/images/...
        # =======================================================
        location /images/ {
            proxy_pass http://upload-service:3002/images/; # Pass the /images/ path
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Proxy all other requests to the frontend service
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Error pages
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}